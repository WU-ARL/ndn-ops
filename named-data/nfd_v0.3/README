 Now add the new stuff for nfd and nlsr
  Some configuration files are customized to the individual nodes. The names of these
  files below have a <name> in them. This <name> should be replaced with the name associated
  with the individual node. e.g. wu for Washington University, caida for CAIDA, ucla for UCLA, remap for REMAP, ...
  ), there are many such files. Here are the <name> files:
      NFD_conf_files/nfd-init.sh.<name> (requires changes to all nfd-init.sh files because of ndnrtc strategy config)
      NFD_conf_files/nfd.conf.<name> (nfd.conf files now contain a network_region clause that includes the nodes default prefix)
      NLSR_key_scripts/<name>.sh
      etc_default/ndn-autoconfig-server.<name>
      etc_default/ndnping.<name>
      etc_default/nfdstat_c.<name>
      etc_default/nfd-autoreg.<name>  (requires changes to neighbors nfd-autoreg files also)
      NLSR_conf_files/nlsr_<name>.conf  (requires changes to neighbors NLSR conf files also)
      REPO_NG_conf_files/repo-ng.conf.<name>

  cd ndn-ops/named-data/running_version

  Add an nlsr user
  > sudo adduser nlsr

  Add all the packages we need:
  > ./git_and_apt_install.sh 

  # the above will install nfd and automatically start it. stop it so we can reconfigure.
  > sudo initctl stop nfd

  > pushd etc_default/
  > sudo cp ndnping.<name> /etc/default/ndnping
  > sudo cp nfd-autoreg.<name>  /etc/default/nfd-autoreg
  > sudo cp ndn-autoconfig-server.<name>  /etc/default/ndn-autoconfig-server
  > sudo cp nfdstat_c.<name>  /etc/default/nfdstat_c
  > sudo cp nfd-status-http-server /etc/default/
  > popd

  > pushd NFD_conf_files/
  > sudo cp nfd.conf.<name> /etc/ndn/nfd.conf
  > sudo cp nfd-init.sh.<name> /etc/ndn/nfd-init.sh
  > popd

  > pushd REPO_NG_conf_files/
  > sudo cp repo-ng.conf.<name> /etc/ndn/repo-ng.conf
  > popd

  > pushd NLSR_conf_files/
  > sudo cp nlsr_<name>.conf /etc/ndn/nlsr/nlsr.conf
  > sudo cp log4cxx.conf /etc/ndn/nlsr/
  > popd

  > pushd Upstart/
  > sudo cp nfd-autoreg.conf /etc/init/
  > sudo cp nfd-status-http-server.conf /etc/init/
  > sudo cp nlsr.conf /etc/init/
  > sudo cp nfdstat_c.conf /etc/init/
  > sudo cp ndn-autoconfig-server.conf /etc/init/
  > popd


  Then do the NLSR_key_scripts stuff
  > pushd NLSR_key_scripts
  Follow directions in <name>.sh. Some commands are executed on the local machine and one has to be
  executed on the root node, UCLA (spurs). DO NOT TRY TO JUST EXECUTE THIS SCRIPT.

  Copy root.cert from UCLA (spurs) to /etc/ndn/nlsr/keys


  chown anything that needs it.
  > sudo chown -R nlsr.nlsr  /etc/ndn/nlsr/keys
  > sudo chown -R ndn.ndn  /var/lib/ndn/
  > sudo chown -R nlsr.nlsr  /var/lib/ndn/nlsr

  Generate a node key and cert.
    > sudo mkdir /etc/ndn/keys
    > sudo adduser ndnsec
    > sudo su - ndnsec
    ndnsec> ndnsec-key-gen -n <site-prefix>
    go to http://ndncert.named-data.net and submit key with special email address:
         <site-prefix>@operators.named-data.net

    ( or if we are just resigning an existing key, do this: ndnsec-sign-req /testbed/prefix  and then go to web site as above)

    Alex@UCLA will do his thing and I'll get email back with a cert to install with ndnsec-cert-install (as ndnsec user!)

    ndnsec> ndnsec-cert-intall -I -K -f  <URL from ndncert.named-data.net/>
    ndnsec> ndnsec-set-default -n <site-prefix>
    ndnsec> ndnsec-cert-dump -i <site-prefix> >& default.ndncert
    ndnsec> exit

    now we are back to ndnops user

    ndnops> cd /etc/ndn/keys
    ndnops> sudo cp ~ndnsec/default.ndncert .

    Then the operator of the new site and users at that site can begin requesting certs
    whenever they want.
    The site operator approves user certs with email address in the sites domain using:
    > sudo su - ndnsec -c ndnop-process-requests


  Then start nfd:
  sudo initctl start nfd

  Then wait a few seconds and check the upstart log directory to make sure nothing is going crazy:
  ls -ltr /var/log/upstart
 
  John DeHart: Then restart nfd on new nodes neighbors

  Verify that the new node has faces and routes:
  > nfd-status

This next set of stuff is for John DeHart to do:
  Add it to the NDN Testbed Status page (http://www.arl.wustl.edu/~jdd/ndnstatus/ndn_prefix/tbs_ndnx.html)

  Add it to ndnmap (http://ndnmap.arl.wustl.edu/)

  Add it to ndndiag status page (http://www.arl.wustl.edu/~jdd/ndnstatus/ndn_diag/diag.html)
    Add a crontab entry for generating diagnostic data replacing <node_name> with something appropriate:
      15 * * * * /home/ndnops/ndn-ops/NOC/bin/ndnops_diag.sh <node_name>

  Notify the folks at Memphis so they can add it to their routing status page (http://netlab.cs.memphis.edu/script/htm/ndn-status/status.htm)


Set up the node for automatic updates. Here is a diff of before and after:
/etc/apt/apt.conf.d$ diff save.50unattended-upgrades.save 50unattended-upgrades
4c4
< //	"${distro_id}:${distro_codename}-updates";
---
> 	"${distro_id}:${distro_codename}-updates";
6a7,8
> // NDN PPA
>         "LP-PPA-named-data:${distro_codename}";
38a41
> Unattended-Upgrade::Mail "jdd@wustl.edu";
46a50
> Unattended-Upgrade::Remove-Unused-Dependencies "true";
50c54
< //Unattended-Upgrade::Automatic-Reboot "false";
---
> Unattended-Upgrade::Automatic-Reboot "false";
