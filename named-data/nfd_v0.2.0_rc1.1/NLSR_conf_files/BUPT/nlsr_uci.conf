; the general section contains all the general settings for router

general
{
; mandatory configuration command section network, site and router

    network /ndn/         ; name of the network the router belongs to in ndn URI format
    site /edu/uci    ; name of the site the router belongs to in ndn URI format
    router /%C1.Router/ndnhub    ; name of the router in ndn URI format

; lsa-refresh-time is the time in seconds, after which router will refresh its LSAs

    lsa-refresh-time 1080      ; default value 1800. Valid values 240-7200

; log-level is to set the levels of log for NLSR

    log-level  INFO       ; default value INFO, valid value DEBUG, INFO
    log-dir /tmp/nlsr  ; path for log directory (Absolute path)
    seq-dir /tmp/nlsr  ; path for sequence directory (Absolute path)
}

; the neighbors section contains the configuration for router's neighbors and hello's behavior

neighbors
{
; in case hello interest timed out, router will try 'hello-retries' times at 'hello-time-out'
; seconds interval before giving up for any neighbors (deciding link is down)

   hello-retries 3                     ; interest retries number in integer. Default value 3
                                       ; valid values 1-10

   hello-timeout 1                    ; interest time out value in integer. Default value 1
                                       ; Valid values 1-15

   hello-interval  60                  ; interest sending interval in seconds. Default value 60
                                       ; valid values 30-90
; neighbor command is used to configure router's neighbor. Each neighbor will need
; one block of neighbor command




; Router Names
; ARIZONA:   /ndn/edu/arizona/%C1.Router/hobo
; BUPT:      /ndn/cn/edu/bupt/%C1.Router/bupthub
; CAIDA:     /ndn/org/caida/%C1.Router/click
; CSU:       /ndn/edu/colostate/%C1.Router/mccoy
; LIP6:      /ndn/fr/lip6/%C1.Router/ndnhub
; MEMPHIS:   /ndn/edu/memphis/%C1.Router/titan
; MICHIGAN:  /ndn/edu/umich/%C1.Router/ndn0
; NEU:       /ndn/edu/neu/%C1.Router/ndnrtr
; ORANGE1:   /ndn/fr/orange1/%C1.Router/orange-ndn-1
; PKU:       /ndn/cn/edu/pku/%C1.Router/pkuhub
; REMAP:     /ndn/edu/ucla/%C1.Router/cs/aleph
; TONGJI:    /ndn/cn/edu/tongji/%C1.Router/cnlab
; UCI:       /ndn/edu/uci/%C1.Router/ndnhub
; UCLA:      /ndn/edu/ucla/%C1.Router/cs/spurs
; UIUC:      /ndn/edu/uiuc/%C1.Router/ndnx
; WU:        /ndn/edu/wustl/%C1.Router/wundngw

; RTR to RTR Links:
;   PKU      10.0.10.6 - 10.0.10.5 NEU
;   PKU      10.0.13.1 - 10.0.13.2 TONGGJI
;   PKU      10.0.13.5 - 10.0.13.6 BUPT
;   PKU      10.0.3.14 - 10.0.3.13 UCLA
;   TONGJI   10.0.14.1 - 10.0.14.2 BUPT
;   TONGJI   10.0.7.2  - 10.0.7.1  CAIDA
;   UCLA     10.0.3.5  - 10.0.3.6  CAIDA
;   UCLA     10.0.3.17 - 10.0.3.18 UCI
;   UCLA     10.0.3.9  - 10.0.3.10 REMAP
;   UCLA     10.0.3.1  - 10.0.3.1  CSU
;   REMAP    10.0.4.6  - 10.0.4.5  CSU
;   REMAP    10.0.6.6  - 10.0.6.5  UCI
;   REMAP    10.0.1.18 - 10.0.1.17 ARIZONA
;   CAIDA    10.0.6.2  - 10.0.6.1  UCI
;   CAIDA    10.0.1.10 - 10.0.1.9  ARIZONA
;   ARIZONA  10.0.1.5  - 10.0.1.6  CSU
;   ARIZONA  10.0.1.13 - 10.0.1.12 WU
;   ARIZONA  10.0.1.1  - 10.0.1.2  MEMPHIS
;   CSU      10.0.4.1  - 10.0.4.2  UIUC
;   CSU      10.0.4.9  - 10.0.4.10 MICHIGAN
;   WU       10.0.8.2  - 10.0.8.1  UIUC
;   WU       10.0.2.2  - 10.0.2.1  MEMPHIS
;   MEMPHIS  10.0.2.5  - 10.0.2.6  MICHIGAN
;   MEMPHIS  10.0.2.9  - 10.0.2.10 NEU
;   MEMPHIS  10.0.2.13 - 10.0.2.14 ORANGE1
;   MICHIGAN 10.0.10.2 - 10.0.10.1 NEU
;   MICHIGAN 10.0.12.1 - 10.0.12.2 LIP6
;   MICHIGAN 10.0.8.6  - 10.0.8.5  UIUC
;   LIP6     10.0.15.1 - 10.0.15.2 ORANGE1


; UCI has 3 neighbors: UCLA, REMAP, CAIDA/UCSD
   neighbor
   {
       name /ndn/edu/ucla/%C1.Router/cs/spurs/        ; name prefix of the neighbor router consists
                                            ; of network, site-name and router-name
       face-uri  udp://h9x2                 ; face id of the face connected to the neighbor
       link-cost  1                         ; cost of the connecting link to neighbor
   }
   neighbor
   {
       name /ndn/edu/ucla/%C1.Router/cs/aleph/        ; name prefix of the neighbor router consists
                                            ; of network, site-name and router-name
       face-uri  udp://h5x2                 ; face id of the face connected to the neighbor
       link-cost  1                         ; cost of the connecting link to neighbor
   }
   neighbor
   {
       name /ndn/org/caida/%C1.Router/click/        ; name prefix of the neighbor router consists
                                            ; of network, site-name and router-name
       face-uri  udp://h11x2                 ; face id of the face connected to the neighbor
       link-cost  3                         ; cost of the connecting link to neighbor
   }
}

; the hyperbolic section contains the configuration settings of enabling a router to calculate
; routing table using [hyperbolic routing table calculation](http://arxiv.org/abs/0805.1266) method

hyperbolic
{
; commands in this section follows a strict order
; the switch is used to set hyperbolic routing calculation in NLSR

    state off             ; default value 'off', set value 'on' to enable hyperbolic routing table
                           ; calculation which turns link state routing 'off'. set value to 'dry-run"
                           ; to test hyperbolic routing and compare with link state routing.


    radius   123.456       ; radius of the router in hyperbolic coordinate system
    angle    1.45          ; angle of the router in hyperbolic coordinate system
}


; the fib section is used to configure fib entry's type to ndn FIB updated by NLSR

fib
{
; the max-faces-per-prefix is used to limit the number of faces for each name prefixes
; by NLSR in ndn FIB

    max-faces-per-prefix 3   ; default value 0. Valid value 0-60. By default (value 0) NLSR adds
                             ; all available faces for each reachable name prefixes in NDN FIB

}

; the advertising section contains the configuration settings of the name prefixes
; hosted by this router

advertising
{
; the ndnname is used to advertised name from the router. To advertise each name prefix
; configure one block of ndnname configuration command for every name prefix.

    prefix /ndn/edu/uci           ; name in ndn URI format
}

security
{
  validator
  {
    rule
    {
      id "NSLR Hello Rule"
      for data
      filter
      {
        type name
        regex ^[^<NLSR><INFO>]*<NLSR><INFO><><>$
      }
      checker
      {
        type customized
        sig-type rsa-sha256
        key-locator
        {
          type name
          hyper-relation
          {
            k-regex ^([^<KEY><NLSR>]*)<NLSR><KEY><ksk-.*><ID-CERT>$
            k-expand \\1
            h-relation equal
            p-regex ^([^<NLSR><INFO>]*)<NLSR><INFO><><>$
            p-expand \\1
          }
        }
      }
    }

    rule
    {
      id "NSLR LSA Rule"
      for data
      filter
      {
        type name
        regex ^[^<NLSR><LSA>]*<NLSR><LSA>
      }
      checker
      {
        type customized
        sig-type rsa-sha256
        key-locator
        {
          type name
          hyper-relation
          {
            k-regex ^([^<KEY><NLSR>]*)<NLSR><KEY><ksk-.*><ID-CERT>$
            k-expand \\1
            h-relation equal
            p-regex ^([^<NLSR><LSA>]*)<NLSR><LSA>(<>*)<><><>$
            p-expand \\1\\2
          }
        }
      }
    }

    rule
    {
      id "NSLR Hierarchy Exception Rule"
      for data
      filter
      {
        type name
        regex ^[^<KEY><%C1.Router>]*<%C1.Router>[^<KEY><NLSR>]*<KEY><ksk-.*><ID-CERT><>$
      }
      checker
      {
        type customized
        sig-type rsa-sha256
        key-locator
        {
          type name
          hyper-relation
          {
	    k-regex ^([^<KEY><%C1.Operator>]*)<%C1.Operator>[^<KEY>]*<KEY><ksk-.*><ID-CERT>$
            k-expand \\1
            h-relation equal
            p-regex ^([^<KEY><%C1.Router>]*)<%C1.Router>[^<KEY>]*<KEY><ksk-.*><ID-CERT><>$
            p-expand \\1
          }
        }
      }
    }

    rule
    {
      id "NSLR Hierarchical Rule"
      for data
      filter
      {
        type name
        regex ^[^<KEY>]*<KEY><ksk-.*><ID-CERT><>$
      }
      checker
      {
        type hierarchical
        sig-type rsa-sha256
      }
    }

    trust-anchor
    {
      type file
      file-name "/etc/ndn/nlsr/keys/root.cert"

      ;type any
    }
  }
   ; optional, a file containing the root certificate. only the router
     ; that is designated to publish root cert needs to specify this
   ;cert-to-publish "/etc/ndn/nlsr/keys/root.cert"  

   ; optional, a file containing the site certificate. only the router
     ; that is designated to publish site cert need to specify this
   cert-to-publish "/etc/ndn/nlsr/keys/site.cert" 

   ; optional, a file containing the operator certificate. only the
     ; router that is designated to publish operator cert need to specify this
   cert-to-publish "/etc/ndn/nlsr/keys/operator.cert"

  ; required, a file containing the router certificate.
  cert-to-publish "/etc/ndn/nlsr/keys/router.cert" 
}



